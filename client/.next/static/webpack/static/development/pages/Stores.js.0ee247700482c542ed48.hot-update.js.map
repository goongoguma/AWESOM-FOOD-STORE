{"version":3,"file":"static/webpack/static\\development\\pages\\Stores.js.0ee247700482c542ed48.hot-update.js","sources":["webpack:///./pages/Stores.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { Portal } from \"./components/Portal\";\r\nimport * as React from \"react\";\r\nimport Link from \"next/link\";\r\nimport \"../scss/style.scss\";\r\n\r\nclass Stores extends React.Component {\r\n  constructor() {\r\n    super(...arguments);\r\n    this.state = { opened: false, image: \"\", name: \"\", description: \"\" };\r\n  }\r\n\r\n  open = () => {\r\n    this.setState({ opened: true });\r\n  };\r\n\r\n  close = () => {\r\n    this.setState({ opened: false });\r\n  };\r\n\r\n  storeDetail = id => {\r\n    this.props.data.map(store => {\r\n      if (store.id === id) {\r\n        this.setState({\r\n          name: store.name,\r\n          image: store.image,\r\n          description: store.description\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { image, name, description } = this.state;\r\n    const { data } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"store-wrapper\">\r\n          <h2 className=\"store-list-title\">Store List</h2>\r\n          <h4>Bon App√©tit</h4>\r\n          <ul className=\"container\">\r\n            {data.map(store => (\r\n              <li onClick={this.open} key={store.id} className=\"item\">\r\n                <img\r\n                  src={store.thumb}\r\n                  onClick={() => this.storeDetail(store.id)}\r\n                  alt={`${store.name} image`}\r\n                />\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <Link href=\"/\">\r\n            <a className=\"back-to-menu\">Back to Home</a>\r\n          </Link>\r\n          {this.state.opened && (\r\n            <div>\r\n              <Portal selector=\"#modal\">\r\n                <div className=\"extra\" />\r\n                <div className=\"overlay\">\r\n                  <div className=\"modal\">\r\n                    <img\r\n                      src={image}\r\n                      alt=\"store image\"\r\n                      className=\"modal-image\"\r\n                    />\r\n                    <div className=\"modal-content-wrapper\">\r\n                      <h3 className=\"modal-store-name\">{name}</h3>\r\n                      <p className=\"modal-store-description\">{description}</p>\r\n                    </div>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"close-btn\"\r\n                      onClick={this.close}\r\n                    >\r\n                      X\r\n                    </button>\r\n                  </div>\r\n                  <style jsx global>{`\r\n                    body {\r\n                      overflow: hidden;\r\n                    }\r\n                  `}</style>\r\n                  <style jsx>{`\r\n                    .overlay {\r\n                      position: fixed;\r\n                      background-color: rgba(0, 0, 0, 0.7);\r\n                      top: 0;\r\n                      right: 0;\r\n                      bottom: 0;\r\n                      left: 0;\r\n                    }\r\n                    .overlay:after {\r\n                      background: blue;\r\n                    }\r\n                    .modal {\r\n                      background-color: linear-gradient(\r\n                        rgba(0, 0, 0, 0.7),\r\n                        rgba(0, 0, 0, 0.7)\r\n                      );\r\n                      position: absolute;\r\n                      top: 5%;\r\n                      right: 10%;\r\n                      bottom: 10%;\r\n                      left: 10%;\r\n                      padding: 4rem;\r\n                      color: #fff;\r\n                      display: flex;\r\n                    }\r\n                    .modal-image {\r\n                      width: 100%;\r\n                      height: 70%;\r\n                      margin-right: 2rem;\r\n                    }\r\n                    .modal-store-name {\r\n                      font-size: 2rem;\r\n                      color: #e67e22;\r\n                      margin-bottom: 1.5rem;\r\n                    }\r\n                    .modal-store-description {\r\n                      margin-top: 10px;\r\n                      line-height: 1.5rem;\r\n                      font-size: 30%;\r\n                    }\r\n                    .close-btn {\r\n                      color: #fff;\r\n                      cursor: pointer;\r\n                      position: absolute;\r\n                      top: 0;\r\n                      right: 0;\r\n                      width: 30px;\r\n                      height: 30px;\r\n                      outline: none;\r\n                    }\r\n                  `}</style>\r\n                </div>\r\n              </Portal>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nStores.getInitialProps = async () => {\r\n  const res = await axios.get(\"http://localhost:9000/stores\");\r\n  const data = await res.data;\r\n  console.log(`Show data fetched. Count: ${data.length}`);\r\n  return {\r\n    data: data\r\n  };\r\n};\r\n\r\nexport default Stores;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAMA;AAAA;AAAA;AACA;AACA;AARA;AAUA;AAAA;AAAA;AACA;AACA;AAZA;AAcA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAtBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAGA;AACA;;;AAqmFA;;;;AAvIA;AACA;AAyIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAEA;AACA;AAHA;AAKA;AADA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;;;;A","sourceRoot":""}